class Solution {
public:
    bool helper( vector<int> &counts,vector<int>& quantity,int ithcus){
        if(ithcus == quantity.size()){
            return true;
        }
        for(int i =0; i < counts.size(); ++i){
            if(counts[i] >= quantity[ithcus]){
                counts[i] -= quantity[ithcus];
                if(helper(counts,quantity, ithcus +1)){
                    return true;
                }
                counts[i] += quantity[ithcus];
         }
        }
        return false;
    }
    bool canDistribute(vector<int>& nums, vector<int>& quantity) {
        unordered_map<int ,int> countMap; 
        for(auto num : nums)
        countMap[num]++;
            vector<int> counts;
            for(auto it : countMap)
                counts.push_back(it.second);
                sort(quantity.rbegin(), quantity.rend());
                return helper(counts,quantity,0);
            }
        };y
